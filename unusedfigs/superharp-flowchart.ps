%!PS-Adobe-3.0%%Title: (PICT : Picture 3)%%Creator: (Canvas\252 6: LaserWriter 8 8.6)%%CreationDate: (1:32 PM Tuesday, October 30, 2001)%%For: (Howard Fenker)%%Routing: (mailto:\000hcf@jlab.org)%%Pages: 1%%DocumentFonts: TimesNewRomanPS-BoldItalicMT%%DocumentNeededFonts: TimesNewRomanPS-BoldItalicMT%%DocumentSuppliedFonts:%%DocumentData: Clean7Bit%%PageOrder: Ascend%%Orientation: Portrait%%DocumentMedia: Default 612 792 0 () ()%RBINumCopies: 1%RBINupNess: 1 1%RBIPCFileName: (HP-CLJ85.PPD)%RBIPPDFileVersion: (1.1.0)%ADO_ImageableArea: 30 33 582 761%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaultsuserdict/dscInfo 5 dict dup begin/Title(PICT : Picture 3)def/Creator(Canvas\252 6: LaserWriter 8 8.6)def/CreationDate(1:32 PM Tuesday, October 30, 2001)def/For(Howard Fenker)def/Pages 1 defend put%%BeginProlog/md 192 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if%%BeginFile: lw8_feature-1.01%%Copyright: Copyright 1990-1998 Adobe Systems Incorporated and Apple Computer Incorporated. All Rights Reserved./bd{bind def}bind def/ld{load def}bd/xs{exch store}bd/Z{0 def}bd/T true def/F false def/level2/languagelevel where{pop languagelevel 2 ge}{F}ifelsedef/odictstk Z/oopstk Z/fcl{count oopstk sub dup 0 gt{{pop}repeat}{pop}ifelsecountdictstack odictstk sub dup 0 gt{{end}repeat}{pop}ifelse}bd/sfcl2{/odictstk countdictstack storecount/oopstk xs}bd/efcl2{stopped{$error/newerror F put}iffcl}bd/noload Z/startnoload{{/noload save store}if}bd/endnoload{{noload restore}if}bd/setcopies{level2{1 dict begin/NumCopies exch def currentdict end setpagedevice}{userdict/#copies 3 -1 roll put}ifelse}deflevel2 startnoload/ststpgdev{}def/dopgdev{}def/stpgdev{}def/buf Z/didstop T def/sfcl{/didstop T store/odictstk countdictstack storecount/oopstk xscurrentfile cvx stopped{$error/newerror F putdidstop{save/didstop xs/buf vmstatus exch sub exch pop dup 0 lt{pop 0}ifdup 64000 gt{pop 64000}if string store{currentfile buf readline{(}efcl)eq{exit}if}{/UnexpectedEOF errordict/rangecheck get exec}ifelse}loopdidstop restore}if}iffcl}bd/efcl{/didstop F storeexecstop}bdlevel2 endnoload level2 not startnoload/setpagedevice where{pop/realstpgdev/setpagedevice ld}if/SC_topddict Z/SC_spdict Z/$spusrdict F def/dopgdev{userdict/setpagedevice undef$spusrdict{userdict/setpagedevice/realstpgdev load put/$spusrdict F store}ifSC_topddict realstpgdev}bd/stpgdev{SC_topddict dup 3 -1 roll{SC_spdict 2 index known{SC_spdict 2 index getdup 3 -1 roll{put dup}forallpop put dup}{put dup}ifelse}forallpop pop}bd/ststpgdev{/setpagedevice where{userdict eq{/$spusrdict T store}if}ifuserdict/setpagedevice/stpgdev load put/SC_topddict 0 dict store/SC_spdict 3 dict begin/InputAttributes 0 dict def/Policies 0 dict def/OutputAttributes 0 dict defcurrentdictendstore}def/sfcl/sfcl2 ld/efcl/efcl2 ldlevel2 not endnoload%%EndFile%%BeginFile: lw8_basic-3.0/xdf{exch def}bd/:L/lineto/lw/setlinewidth/:M/moveto/rl/rlineto/rm/rmoveto/:C/curveto/:T/translate/:K/closepath/:mf/makefont/gS/gsave/gR/grestore/np/newpath12{ld}repeat/framewidth -1 def/QDframwid -1 def/numframes Z/mTS matrix def/$m matrix def/av 86 def/por T def/normland F def/psb-nosave{}def/pse-nosave{}def/us Z/psb{/us save store}bd/pse{us restore}bd/level3/languagelevel where{pop languagelevel 3 ge}{F}ifelsedeflevel2 startnoload/setjob{statusdict/jobname 3 -1 roll put}bd/devg/DeviceGray def/devr/DeviceRGB def/devc/DeviceCMYK deflevel2 endnoload level2 not startnoload/setjob{1 dict begin/JobName xdf currentdict end setuserparams}bd/devg[/DeviceGray]def/devr[/DeviceRGB]def/devc[/DeviceCMYK]deflevel2 not endnoload/pm Z/mT Z/sD Z/initializepage{mT $m currentmatrix mTS concatmatrix pop/pm save store mT concat}bd/endp{pm restore}bd/adjRect{dup 2 mul 6 2 roll4 index sub exch 5 -1 roll sub exch4 2 roll4 index add exch 5 -1 roll add exch4 2 roll}bd/frame1up{gSmTS setmatrixQDframwid lw/setstrokeadjust where{pop T setstrokeadjust}ifclippath pathbbox2 index sub exch3 index sub exchcurrentlinewidth framewidth muladjRectnumframes dup 0 lt{pop 0}if{4 copyrScurrentlinewidth framewidthmul 4 muladjRect}repeatpop pop pop popgR}bd/$c devr def/rectclip where{pop/rC/rectclip ld}{/rC{np 4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:Kclip np}bd}ifelse/rectfill where{pop/rF/rectfill ld}{/rF{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rlfillgR}bd}ifelse/rectstroke where{pop/rS/rectstroke ld}{/rS{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:KstrokegR}bd}ifelse%%EndFilelevel3 startnoload%%BeginFile: lw8_safeclipL12-1.0					/rectclip where{pop/rCa/rectclip ld}{/rCa{np 01 index length 4 idiv{2 copy4 getintervalaload pop4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:K4 add}repeatclip nppop pop}bd}ifelse/savedstack Z/subsavedstack Z/execstring Z/saferCa{/execstring xs/odictstk countdictstack store/oopstk 0 storecount 0 ne{savedstack 0 eq{count 100 gt{count}{100}ifelsearray/savedstack xs}{count savedstack length gt{count array/savedstack xs}if}ifelsecount savedstack 0 3 -1 rollgetintervalastore/subsavedstack xs}{/subsavedstack 0 store}ifelseexecstring cvx stopped{$error/newerror F putnewpath}iffclsubsavedstack 0 ne{subsavedstack aload pop}if}bd%%EndFilelevel3 endnoload level3 not startnoload%%BeginFile: lw8_safeclipL3-1.0	/saferCa/pop ld%%EndFilelevel3 not endnoload%%BeginFile: lw8_level1_colorspace-2.0/G/setgray ld/:F1/setgray ld/:F/setrgbcolor ld/:F4/setcmykcolor where{pop/setcmykcolor ld}{{3{dup3 -1 roll adddup 1 gt{pop 1}if1 exch sub4 1 roll}repeatpopsetrgbcolor}bd}ifelse/:Fx{counttomark{0{G}0{:F}{:F4}}exch getexecpop}bd/$cs Z/:rg{devr :ss}bd/:sc{$cs :ss}bd/:dc{dup type/arraytype eq{0 get}ifdup/DeviceCMYK eq{pop devc}{/DeviceGray eq{devg}{devr}ifelse}ifelse/$cs xdf}bd/:sgl{}def/:dr{}bd/:fCRD{pop}bd/:ckcs{}bd/:ss{/$c xdf}bd%%EndFile%%BeginFile: lw8_bubn-2.1/$t Z/$p Z/$s Z/$o 1. def/2state? F def/ps Zlevel2 startnoload/pushcolor/currentrgbcolor ld/popcolor/setrgbcolor ld/setcmykcolor where{pop/currentcmykcolor where{pop/pushcolor/currentcmykcolor ld/popcolor/setcmykcolor ld}if}iflevel2 endnoload level2 not startnoload/pushcolor{currentcolorspace $c eq{currentcolor currentcolorspace T}{currentcmykcolor F}ifelse}bd/popcolor{{setcolorspace setcolor}{setcmykcolor}ifelse}bdlevel2 not endnoload/pushstatic{2state?$o$t$p$s$csps}bd/popstatic{/ps xs/$cs xs/$s xs/$p xs/$t xs/$o xs/2state? xs}bd/pushgstate{currentpointpushcolorcurrentlinewidthcurrentlinecapcurrentlinejoincurrentdash exch aload lengthnp clippath pathbbox$m currentmatrix aload pop}bd/popgstate{$m astore setmatrix2 index sub exch3 index sub exchrCarray astore exch setdashsetlinejoinsetlinecaplwpopcolornp :M}bd/bu{errordict/nocurrentpoint{pop 0 0}put2state?{pushgstategR}ifpushgstategRpushgstatepushstaticpm restoremTS setmatrix}bd/bn{/pm save storepopstaticpopgstategSpopgstate2state?{gSpopgstate}if}bd/cpat{pop 64 div setgray 8{pop}repeat}bd%%EndFile%%BeginFile: lw8_basic_text-2.1/S/show ld/A{0.0 exch ashow}bd/R{0.0 exch 32 exch widthshow}bd/W{0.0 3 1 roll widthshow}bd/J{0.0 32 4 2 roll 0.0 exch awidthshow}bd/V{0.0 4 1 roll 0.0 exch awidthshow}bd/fcflg T def/fc{fcflg{vmstatus exch sub 50000 lt{(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg F store}if pop}if}bd/$f[1 0 0 -1 0 0]def/:ff{$f :mf}bd/MacEncoding StandardEncoding 256 array copy defMacEncoding dup 9/space put dup 39/quotesingle put 96/grave put/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacEncoding 128 128 getinterval astore poplevel2 startnoload/copyfontdict{findfont dup length dictbegin{1 index/FID ne{def}{pop pop}ifelse}forall}bd/$ckeyd md def/:skey{1 index maxlength 2 indexlength subge{begin/$mkeys 20 dict def/$mkeys loadenddup/$ckeyd xs}if3 1 roll put}bd/fD1pass{40$ckeyd//mdne{pop 1}if$ckeyd exch:skey}bd/:searchdict Z/:searchdict{exch 2 copyknown{get}{exch/$mkeysget:searchdict}ifelse}bd/lU{//md exch 2 copyknown{get}{exch/$mkeys get:searchdict}ifelse}bd/:xs{exch 0 1 2 index length 1 sub{3 copygsave 1 getinterval show grestoreexchget 0.0rmoveto}for pop pop}bd/:ys{exch 0 1 2 index length 1 sub{3 copygsave 1 getinterval show grestoreexchget 0.0 exchrmoveto}for pop pop}bd/:xys{exch 0 1 2 index length 1 sub{3 copygsave 1 getinterval show grestoreexch 2 mul 2 copy1 add get 3 -2 roll get exchrmoveto}for pop pop}bdlevel2 endnoload level2 not startnoload/copyfontdict{findfont dup length dictcopybegin}bd/fD1pass/def ld/lU/load ldlevel2{/:xs/xshow ld/:ys/yshow ld/:xys/xyshow ld}iflevel2 not endnoload/fD Z/sf Z/scf Z/sf1pass{lU setfont}bd/scf1pass{exch lU exch scalefont fD}bd/scf2pass{scalefont fD}bdmd/fontname known not{/fontname/customfont def}if/Encoding Z/:mre{copyfontdict/Encoding MacEncoding deffontname currentdictenddefinefont :ff fD}bd/:bsr{copyfontdict/Encoding Encoding 256 array copy defEncoding dup}bd/pd{put dup}bd/:esr{pop popfontname currentdictenddefinefont :ff fD}bd/ps Z/fz{/ps xs}bd/cF/currentfont ld/mbf{/makeblendedfont where{popmakeblendedfont/ABlend exch definefont}{pop}ifelsefD}def%%EndFile/currentpacking where {pop sc_oldpacking setpacking}if end%%EndProlog%%BeginSetupmd begin/fD/def ld/sf/setfont ld /scf/scf2pass ld 600/languagelevel where{pop languagelevel 2 ge}{false}ifelse{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelsesfcl{%%BeginFeature: *HPJobRetention HPJobRetentionOff	<< /CollateDetails 	<< /Type 8 /Hold 0 >> >> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPUserName FileSharingName	<< /CollateDetails 		<< /Type 8			/UserName /dscInfo where 				{ /dscInfo get dup /For known					{/For get}					{pop (No User Name)} ifelse}				{(No User Name)}ifelse			dup length 80 gt { 0 80 getinterval } if			dup true exch { 32 eq not { false exch pop } if } forall			{ pop (No User Name) } if			0 1 2 index length 1 sub			{ dup 2 index exch get dup 97 ge 1 index 122 le and				{ 32 sub 2 index 3 1 roll put }				{ pop pop } ifelse 			} for		>>	>> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPJobName DocName	<< /CollateDetails		<< /Type 8 			/JobMgrName /dscInfo where 				{ /dscInfo get dup /Title known					{/Title get}					{pop ()} ifelse}				{()}ifelse			/dscInfo where 				{ /dscInfo get dup /Creator known					{						/Creator get dup 0 exch						{ dup 32 eq exch dup 64 gt exch 122 le and or { 1 add } { exit } ifelse } forall						0 exch getinterval anchorsearch { pop } if					}					{pop} ifelse				} if			{ (:) search				{ pop pop }				{ exit }				ifelse			} loop			dup 0 exch { false ( -) { 2 index eq or } forall exch pop { 1 add } { exit } ifelse } forall			dup 0 eq { pop } { dup 2 index length exch sub getinterval } ifelse			dup length 80 gt { 0 80 getinterval } if			dup true exch { 32 eq not { false exch pop } if } forall			{ pop () } if			0 1 2 index length 1 sub			{ dup 2 index exch get dup 97 ge 1 index 122 le and				{ 32 sub 2 index 3 1 roll put }				{ pop pop } ifelse 			} for		>>	>> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPDuplex None	 <</Duplex false /Tumble false >> setpagedevice %%EndFeature
}efcl
sfcl{%%BeginFeature: *HPClean False<< /Cleaning false >> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *EFSimulation SWOP<< /CMYKInkSet 1 >> setpagedevice %%EndFeature
}efcl
sfcl{%%BeginFeature: *HPCSText VividDetailglobaldict /ColorSmartColorMatching known {	true ColorSmartColorMatching	Vivid ColorSmartTextAdjustment	Detail ColorSmartTextHalftone	true ColorSmartColorMatching} if%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPCSGraphics VividDetailglobaldict /ColorSmartColorMatching known {	true ColorSmartColorMatching	Vivid ColorSmartGraphicsAdjustment	Detail ColorSmartGraphicsHalftone	true ColorSmartColorMatching} if%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPCSImages VividSmoothglobaldict /ColorSmartColorMatching known {	true ColorSmartColorMatching	Vivid ColorSmartImageAdjustment	Smooth ColorSmartImageHalftone	true ColorSmartColorMatching} if%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPJobHoldKey HoldKeyNone<< /CollateDetails << /Type 8 /HoldType 0 >> >> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *ManualFeed False<</ManualFeed false>> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPColorSmart Automatic<< /ProcessColorModel /DeviceCMYK >> setpagedevice globaldict /ColorSmartColorMatching known {	true ColorSmartColorMatching	Vivid ColorSmartTextAdjustment	Vivid ColorSmartGraphicsAdjustment	Vivid ColorSmartImageAdjustment	Detail ColorSmartTextHalftone	Smooth ColorSmartGraphicsHalftone	Smooth ColorSmartImageHalftone	true ColorSmartColorMatching} if%%EndFeature
}efcl
sfcl{%%BeginFeature: *SpotColors True<< /SpotColorMatching true >> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *ManualDuplex False<< /PrintOnBackside false >> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *Collate False<< /Collate false >> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPStaplerOptions PrintersDefault%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPwmBrightness Mediumuserdict /HPwmSaturation { [ currentcmykcolor ] /DeviceCMYK setcolorspace { .55 mul } forall setcolor } put%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPwmTextColor Blackuserdict /HPwmColor { 0 setgray HPwmSaturation } bind put%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPwmText Draftuserdict /HPwmText (Draft) put%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPwmFont HelveticaB  /Helvetica-Bold findfont dup length dict begin    {1 index /FID ne {def} {pop pop} ifelse} forall    /MacEncoding where    { pop /Encoding MacEncoding def }    { /Encoding ISOLatin1Encoding def } ifelse    currentdict   end  /HPwmFont exch definefont pop%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPwmFontSize pt48userdict /HPwmSize 48 put%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPwmTextAngle Deg45userdict /HPwmAngle 45 put%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPwmTextStyle Mediumuserdict /HPwmStyle { HPwmText false charpath HPwmColor .48 setlinewidth stroke } bind put%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPwmPages AllPagesuserdict /HPwmLocation true put%%EndFeature
}efcl
sfcl{%%BeginFeature: *PageSize Letter    << /PageSize [612 792] /MediaType (null)	/InputAttributes << 0 << /PageSize [612 792] /MediaType (null) >> >> >> setpagedevice %%EndFeature
}efcl
sfcl{%%BeginFeature: *OutputBin PrinterDefault%%EndFeature
}efcl
sfcl{%%BeginFeature: *HPwmSwitch Off%%EndFeature
}efcl
(Howard Fenker)setjob/mT[1 0 0 -1 30 761]def/sD 16 dict def%%IncludeFont: TimesNewRomanPS-BoldItalicMT/f47/TimesNewRomanPS-BoldItalicMT:mre/f70 f47 150 scf/Courier findfont[10 0 0 -10 0 0]:mf setfont%%BeginFeature: %%BeginResource: procset Deneba_CanvasGraphics%%Title: Deneba standard graphics%%Version: 1.0%%CreationDate: 10/1/94%%Copyright: (C) 1994 Deneba Systems. All Rights Reserveduserdict /Deneba_CanvasGraphics 300 dict putDeneba_CanvasGraphics begin/invalidcolortable? true def   /level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse def/initialize{Deneba_CanvasGraphics{dup xcheck{bind}if pop pop}forallcurrentscreen /_sp exch def /_sa exch def /_sf exch def/DefaultScreen{_sf _sa /_sp load}def/DefaultScreenProc{ /_sp load}def/setstrokeadjust where{pop true}{false}ifelse{/sa /setstrokeadjust load def/li /lineto load def/mt /moveto load def/ct /curveto load def/lh { currentpoint exch pop lineto}bind def/lv { currentpoint pop exch lineto}bind def}{/sa{{currentdict StrokeAdjustDict ne{StrokeAdjustDict begin}if}{ currentdict StrokeAdjustDict eq{end}if}ifelse} bind defuserdict /StrokeAdjustDict 100 dict putStrokeAdjustDict begin/_xl{transform.25 sub round .25 add exch.25 sub round .25 add exchitransform}bind def/li{ _xl lineto}bind def/mt{ _xl moveto}bind def/ct{ _xl curveto}bind def/lh { dup _xl pop currentpoint exch pop lineto}bind def/lv { dup _xl pop currentpoint pop exch lineto}bind def/rp{_xl/cv_b xdf/cv_r xdf_xl/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}bind defend}ifelse}def/terminate{userdict /StrokeAdjustDict known {currentdict StrokeAdjustDict eq{end}if}ifcurrentdict Deneba_CanvasGraphics eq{end}if}def/mxMax 64 def/mxStk [mxMax {matrix} repeat]def/mxIdx 0 def/stm{mxStk mxIdx 0 lt {/mxIdx 0 store}if mxIdx get currentmatrix pop /mxIdx mxIdx 1 add store}def/rtm{mxIdx 1 ge {/mxIdx mxIdx 1 sub store mxStk mxIdx get setmatrix}if }def/scl { 72 div exch 72 div exch scale } def/scli { 72 exch div exch 72 exch div exch scale } def/_cvmtx matrix def/_txtmtx matrix def/_initmtx matrix def/xdf{exch def}def/min{2 copy gt{exch}if pop}def/max{2 copy lt{exch}if pop}def/CVvec 256 array def/T true def/F false def/_id 0 def/_encodindex 0 def/_encodArr 10 array def/_fd 0 def/_textSave null def/_letterSpace 0 def/_spaceXtra 0 def/_PageSave null def/_penh 1.0 def/_penv 1.0 def/save0 null def/_w 0 def/_h 0 def/_ds 0 def/hct false def/pw 0 def/wdif 0 def/temp 0 def/currot 0 def/savehandler null def/ia 0 def/ix 0 def/ixn 1 def/MultipleDataSources false def /debug{dup /$eps exch not def{/savehandler errordict /handleerror get deferrordict/handleerror{$error beginnewerror{/newerror false defshowpage72 72 scale/Helvetica findfont .2 scalefont setfont.25 9.6 moveto(Error: )showerrorname{dup type/stringtype ne{(converted error name will end up in this string)cvs}ifshow}exec.25 9.4 moveto(Offending Command: )show/command load{dup type/stringtype ne{(converted command name will end up in this string)cvs}ifshow}exec.25 9.2 moveto(Stack: )showostack{.25 currentpoint .2 sub exch pop movetodup type/stringtype ne{dup type/integertype eq1 index type/realtype eq or1 index type/nametype eq ornot {type}if(converted stack will end up in this string)cvs}ifshow}forallshowpageDeneba_CanvasGraphics /savehandler get exec}ifend}put}if}def/lc{setlinecap}def/lj{setlinejoin}def/lm{setmiterlimit}def/lf{setflat}def/cp{closepath}def/np{newpath}def/$psz 30 array def/$pix 0 def/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def/li{lineto} def/lh{currentpoint exch pop lineto}def/lv{currentpoint pop exch lineto}def/mt{moveto} def/_cv_mh{currentpoint exch pop moveto}def/_cv_mv{currentpoint pop exch moveto}def/ct{curveto} def/rt{4 -2 roll movetodup 0 exch rlinetoexch 0 rlinetoneg 0 exch rlinetoclosepath}def/_hr{{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}}def/_cs null def/fg{$eps{systemdict /setgray get exec}{setgray}ifelse}def/setcmykcolor where {pop true}{false}ifelse{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse/setcolorspace where {pop true}{false}ifelse{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse/$cc 5 array def/findcmykcustomcolor where {pop true}{false}ifelsenot {/findcmykcustomcolor{$cc astore}def}if/setcustomcolor where {pop true}{false}ifelsenot{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}if/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def/setseparationgray where {pop true}{false}ifelsenot{/setseparationgray {systemdict /setgray get exec} def}if/sg{ setseparationgray}def/sp{/_penv xdf/_penh xdf}def/rp{/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}def/rr{/yradius xdf/xradius xdf/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l xradius add cv_t movetocv_r xradius sub cv_t lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale1 0 1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_r cv_b yradius sub lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 1 -1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l xradius add cv_b lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale-1 0 -1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l cv_t yradius add lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 -1 1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixclosepath}def/ep{_cvmtx currentmatrix poptranslatescale1 0 moveto0 0 1 0 360 arcclosepath_cvmtx setmatrix}def/wd{_cvmtx currentmatrix poptranslatescale0 0 moveto0 0 1 5 -2 roll arcnclosepath_cvmtx setmatrix}def/as{_cvmtx currentmatrix poptranslatescale0 0 1 5 -2 roll arcn_cvmtx setmatrix}def/ds{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def/df{fill}def/de{eofill}def/_gstk 5 array def/_gstkc 0 def/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def/hs{newpath gsave stm}def/hc{/_hr load exch get exec newpath}def/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq not{aload pop moveto}{pop}ifelse dup /_cf get setfontdup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def/id{ /_id xdf}def/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.% All rights reserved.level2 { save /dontloadlevel1 xdf }if/startnoload{{/noload save def} if}def/endnoload{{noload restore}if }def/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def/ncolors 1 def/colorimage where{pop true}{false}ifelse{/ncolors 0statusdict begin /processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known{pop {deviceinfo /Colors get}}if}if}ifelse end defncolors 0 ne{/colorimage testsystemdict/setcolortransfer testsystemdict/currentcolortransfer testsystemdict/currentcmykcolor testsystemdictand and and not{/ncolors 0 def}if}if}ifncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}ifncolors 1 eq dup dup not startnoload{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] cvx bind settransfer _w _h 8 _imatrix _ds image}def}ifnot endnoloadncolors dup 3 eq exch 4 eq ordup dup not startnoload{/nullproc{{}}def/concatutil{/exec load7 -1 roll /exec load}def/defsubclut{1 add getinterval def}def/spconcattransfer   {/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ldcurrentcolortransfer[{Aclut ncompute}concatutil] cvx[{Bclut ncompute}concatutil] cvx[{Cclut ncompute}concatutil] cvx[{Dclut ncompute}concatutil] cvxsetcolortransfer}def/setuprgbcluts{/bit3x rgbclut length 3 sub def/bit1x bit3x 3 idiv def/rclut rgbclut def/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  endnoload ncolors 3 eq dup dup not startnoload{/3compute{exch bit3x mulround cvi get 255 div}def/doclutimage{%/rgbclut xdf pop setuprgbcluts/3compute rclut gclut bclut dupspconcattransfer _w _h 8 _imatrix[/_ds load /exec load /dup load dup]cvxnullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload{/stuffclut{cmykindex 3 -1 roll put}def/ftoint{1 exch sub 255 mul round cvi}def/4compute { exch bit4x mul round cvi get 255 div } def/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def/cmykclut bit4x 4 add string def/cclut cmykclut def/mclut cclut 1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut/kclut cclut 3 bit4x defsubclut/cmykindex 0 def0 1 bit1x{dup /cmykindex exch bit1x exch sub 4 mul def3 mul dup rclut exch get 255 div exch dup gclut exch get 255 divexch bclut exch get 255 divsetrgbcolor currentcmykcolorftoint kclut stuffclutftoint yclut stuffclutftoint mclut stuffclutftoint cclut stuffclut}for}def/doclutimage{invalidcolortable?{computecmykclut}if/4compute cclut mclut yclut kclut spconcattransfer_w _h 8 _imatrix[/_ds load /exec load/dup load dup dup] cvx nullproc nullproc nullproc true 4 colorimage}def}ifnot endnoloadncolors 0 eqdup dup not startnoload{/colorexpand{mystringexp 0 rgbclut3 copy7 -1 roll{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forallpop pop pop pop pop}def/createexpandstr{/mystringexp exch st0 length mul string def}def/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix[/_ds load /exec load /colorexpand load /exec load] cvxfalse 3 colorimage}def}if not endnoloadlevel2 { dontloadlevel1 restore }iflevel2 not{ save /dontloadlevel2 xdf }if/rgbclut 0 def/doclutimage{/hival 255 def [/Indexed /DeviceRGB hival rgbclut] setcolorspace_imagedict dup begin /Width _w def /Height _h def  /Decode [0 hival] def  /ImageMatrix _imatrix def/BitsPerComponent 8 def /Interpolate false defend image}deflevel2 not{ dontloadlevel2 restore }if%%EndProcSet/_imagedict 15 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def/hascolor true def/level2 systemdict /languagelevel known{languagelevel 2 ge}{false}ifelse def/foureq {4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 rollpop pop pop pop and and and} def/setupbands{gsave/_settransfer systemdict /settransfer get def/_currenttransfer systemdict /currenttransfer get def/_image systemdict /image get def/blank 0 _currenttransfer exec1 _currenttransfer exec eq def/negative blank{0 _currenttransfer exec 0.5 lt}{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def/inverted? negative def/_currentgray systemdict /currentgray get defhascolor{/$b 0 def} {/$b 5 def} ifelse/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub0 1 0 0 setcmykcolor _currentgray 1 exch sub0 0 1 0 setcmykcolor _currentgray 1 exch sub0 0 0 1 setcmykcolor _currentgray 1 exch sub4 {4 copy} repeat1 0 0 0 foureq{/$b 1 store}if0 1 0 0 foureq{/$b 2 store}if0 0 1 0 foureq{/$b 3 store}if0 0 0 1 foureq{/$b 4 store}if0 0 0 0 foureq{/$b 6 store}if}ifblank{/$b 6 store}if$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def/doimage{level2{image}{beginWidth Height BitsPerComponent ImageMatrixDecode length 2 eq{/DataSource load end image}{Decode length 6 eq{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelseMultipleDataSources 3 end DSIColorImage}{Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 getDataSource 2 get DataSource 3 get}{/DataSource load}ifelseMultipleDataSources 4 end DSIColorImage}if}ifelse}ifelse}ifelse}def/dt{/rgbclut xdf /bwclut xdf}def/cl{$i setmatrix translate scale/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get defdoclutimage} def/cd{$i setmatrix translate scalelevel2{_imagedict /ColorSpace get setcolorspace}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin/ImageMatrix _imatrix defcurrentdict enddoimage} def/im{$i setmatrix translate scale level2{/DeviceGray setcolorspace 0 setgray}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin%/Decode [0 1] def  %/Width _w def%/Height _h def/ImageMatrix _imatrix defcurrentdict end doimage }def/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul addcvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dupst0 exch get .3 mul1 index 1 add st0 exch get .59 mul add1 index 2 add st0 exch get .11 mul add1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if255.0 exch sub cviexch 4 div cvi exchst1 3 1 roll put}for st1}}ifelseimage}def}ifelse/OPIimage{image}def/$i matrix def/bi{scale translate $i currentmatrix pop translate scale setupbands}def/ei{$i setmatrix}def/ik{$i setmatrix translate scale /_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_w _h false _imatrix 5 -1 roll _ds imagemask}def/rs{2 copy translate3 -1 roll neg rotateneg exch neg exch translate}def/cs{_cvmtx astore concat} def/fd{/_fd xdf}def/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def/$cvfontdict 150 dict begin  /Symbol {/Symbol /Symbol /Symbol -1} def currentdict end def/rfp{/_encodindex xdfFontDirectory 3 index knownnot{dup FontDirectory exch known{exch pop}{pop}ifelse findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}foralldup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}{exch pop}ifelse}forall pop}if}ifdupcurrentdict enddefinefont pop}{pop pop}ifelse} def/rf{3 index 6 1 rollcounttomark array astore cvx exch pop$cvfontdict 3 1 roll put}def/cvsf{$cvfontdict exch get exec rfp findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/mf{3 -1 roll $cvfontdict exch get exec rfpfindfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/wrk1 ( ) def/wdict 16 dict def/Work75 75 string def/Nmk{Work75 cvs dup}def/Npt{put cvn}def/dhOdh{Nmk 2 79 Npt}def/dhBdh{Nmk 2 111 Npt}def/dhSdh{Nmk 2 83 Npt}def/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def/fts{/ftSize exch def}def/mkFT{dup/FontType get 0 eq{dup maxlength dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forallcurrentdict enddup/FDepVector 2 copy get[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict deftempFT begin/FontMatrix [1 0 0 1 0 0] def/FontType 3 defdup/Encoding get/Encoding exch def/proc2 2 index defdup/ft1 exch def/ft2 1 array def/FontBBox [0 0 1 1] def/BuildChar{Deneba_CanvasGraphics beginexch dup/ftdt xdf beginwdict begin/chr xdf/chrst wrk1 dup 0 chr put defft2 0 get null eq{ft1 dup length 2 add dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop defcurrentdict end/q exch definefontft2 exch 0 exch put}ifftdt/proc2 get exec end end end}def end tempFT}ifelse3 index exchdefinefont exch pop}def/mb{dup dhBdhFontDirectory 1 index known 1 index $cvfontdict exch known and{exch pop}{dup 2 index$cvfontdict exch getexecrfpfindfont{boldproc}exchmkFTpop pop popdup 3 -1 rollmark 3 1 roll dup -1counttomark array astore cvxexch pop$cvfontdictexch 2 index exch put}ifelse}def/mo{dup dhOdhFontDirectory 1 index known 1 index $cvfontdict exch known and{exch pop}{dup 2 index$cvfontdict exch getexecrfpfindfont{outproc} exchmkFT pop pop popdup 3 -1 rollmark 3 1 roll dup -1counttomark array astore cvx 		exch pop$cvfontdict exch 2 index exch put}ifelse}def/ms{dup dhSdhFontDirectory 1 index known 1 index $cvfontdict exch known and{exch pop}{dup 2 index$cvfontdict exch getexecrfpfindfont{ShadChar} exchmkFTpop pop popdup 3 -1 rollmark 3 1 roll dup -1counttomark array astore cvx 		exch pop$cvfontdict exch 2 index exch put}ifelse}def/outproc{ft1 setfontgsave chrst sfWidth grestoresetcharwidth dblsh}def/boldproc{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthft1 /PaintType get 2 ne{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def/dblsh{currentcolor currentcolorspace 1.0 setgraychrst 0 0 moveto show setcolorspace setcolorft2 0 get setfont chrst 0 0 moveto show}def/ShadChar{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthchrst .06 0 moveto show0 .05 translate dblsh}def/ts{show}def/ta{/_letterSpace xdf/_spaceXtra xdf}def/tf{/_textWidth xdf/_numSpaces xdf/_stringLength xdfdup	stringwidth pop_letterSpace _stringLength 1 sub mul add_spaceXtra _numSpaces mul add_textWidth exch sub /wdif xdf_spaceXtra 0 32wdif _stringLength div_letterSpace add0 6 -1 roll awidthshow}def/pb{/_PageSave save def/showpage{}def}def/pe{_PageSave restore}def/pm{_pm currentmatrix pop}def/_pm matrix def/ps{showpage _pm setmatrix}deflevel2{/ef {gsave 6 array astore concat dup execform grestore}def}{/ef{gsave 6 array astore concat newpath dup begin Matrix concatBBox dup dup 0 get exch 1 get movetodup dup 0 get exch 3 get linetodup dup 2 get exch 3 get linetodup 2 get exch 1 get lineto closepathclip newpath PaintProc end grestore}def}ifelse/bc{save 11 1 roll 10 dict begin /BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def /FormType 1 def/PaintProc{/pp get exec}def}def/ec{pop restore}def/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def/setoverprint where {pop}{/setoverprint{pop}def}ifelse/initfonts{level2{$cvfontdict dup { pop 1 index exch undef}forall pop}if$cvfontdict begin /Symbol {/Symbol /Symbol /Symbol -1}def end}def/sstr { /$sstrs exch def /$sstr exch def /$sstry exch def /$sstrx exch def /Courier findfont $sstrs scalefont setfont $sstrx $sstry mt stm 1 -1 scale $sstr show rtm } def/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc	eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}	{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def/DSIEndPaintProc{currentdict end}def/DSIBeginPaintSubProc {save 11 1 roll 10 dict dup /pD exch def begin 	/BBox 5 1 roll 4 array astore def /Matrix 7 1 roll 6 array astore def 	/FormType 1 def /PaintProc { /pp get exec } def /pp} def/DSIEndPaintSubProc {bind def end pD} def/iaa {/ix ix ixn add def} def/ias2 {/igap exch def /_st0 ia ix igap add get def _st0} def/ias {/st0 ia ix get def iaa st0} def/i85s {0 ias2 /ASCII85Decode filter st0 readstring pop iaa} def/irles {0 ias2 /ASCII85Decode filter /RunLengthDecode filter st0 readstring pop iaa} definitializeend%%EndResourceDeneba_CanvasGraphics begin 0 id 1 fd_encodArr 0[39/quotesingle 96/grave128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/bullet/Ydieresis/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis] put_encodArr 1[39/quotesingle 96/grave128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron] putend%%EndSetup%%Page: 1 1%%BeginPageSetupinitializepage(Howard Fenker; page: 1 of 1)setjob%%EndPageSetupgS 0 0 552 728 rC0 0 :M%%BeginSetup /bu where {pop bu}ifDeneba_CanvasGraphics begininitfontsmark /___FN3-3 /Times-BoldItalic dup  dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {1 }{-1} ifelse end} {pop -1} ifelse rfT debug0 id1 fd%%EndSetup %%BeginPageSetup pm%%EndPageSetup/DeviceCMYK scs0.668 0.5781 0.6641 0.5078 f40.1250 0.1250 sp 0 lc 2 ljT saterminate /bn where {pop bn}ifDeneba_CanvasGraphics begin599.9996 599.9996 scli%page rect: 30 31 582 759 stm%% DSIBeginObject: # 1 - Ref: 30, Rectangle1. fgnp332.0094 194.5666 3303.5309 3812.6391 rpde%%DSIEndObjectrtmstm%% DSIBeginObject: # 2 - Ref: 2, RoundRect0.0078 0.6953 0.5508 0 f46.2500 6.2500 sp11.5 lm 0 ljnp1468.3714 214.1591 mt1612.2944 214.1591 li1655.1488 214.1591 1690.4192 249.4296 1690.4192 292.284 ct1690.4192 442.9827 li1690.4192 485.8371 1655.1488 521.1075 1612.2944 521.1075 ct1324.4486 521.1075 li1281.5942 521.1075 1246.3238 485.8371 1246.3238 442.9827 ct1246.3238 292.284 li1246.3238 249.4296 1281.5942 214.1591 1324.4486 214.1591 ct1468.3714 214.1591 licpds%%DSIEndObjectrtmstm%% DSIBeginObject: # 3 - Ref: 5, RoundRect0.0078 0.6953 0.5508 0 f4np1474.9022 1546.4458 mt1618.8252 1546.4458 li1661.6796 1546.4458 1696.95 1581.7162 1696.95 1624.5706 ct1696.95 1775.2694 li1696.95 1818.1238 1661.6796 1853.3942 1618.8252 1853.3942 ct1330.9794 1853.3942 li1288.125 1853.3942 1252.8545 1818.1238 1252.8545 1775.2694 ct1252.8545 1624.5706 li1252.8545 1581.7162 1288.125 1546.4458 1330.9794 1546.4458 ct1474.9022 1546.4458 licpds%%DSIEndObjectrtmstm%% DSIBeginObject: # 4 - Ref: 6, RoundRect0.0078 0.6953 0.5508 0 f4np1481.433 2460.7601 mt1625.3559 2460.7601 li1668.2103 2460.7601 1703.4808 2496.0306 1703.4808 2538.885 ct1703.4808 2689.5837 li1703.4808 2732.4381 1668.2103 2767.7086 1625.3559 2767.7086 ct1337.5101 2767.7086 li1294.6557 2767.7086 1259.3853 2732.4381 1259.3853 2689.5837 ct1259.3853 2538.885 li1259.3853 2496.0306 1294.6557 2460.7601 1337.5101 2460.7601 ct1481.433 2460.7601 licpds%%DSIEndObjectrtmstm%% DSIBeginObject: # 5 - Ref: 7, RoundRect0.0078 0.6953 0.5508 0 f4np1478.1676 3348.9513 mt1703.7258 3348.9513 li1746.5802 3348.9513 1781.8506 3384.2217 1781.8506 3427.0762 ct1781.8506 3714.9218 li1781.8506 3757.7763 1746.5802 3793.0467 1703.7258 3793.0467 ct1252.6094 3793.0467 li1209.755 3793.0467 1174.4846 3757.7763 1174.4846 3714.9218 ct1174.4846 3427.0762 li1174.4846 3384.2217 1209.755 3348.9513 1252.6094 3348.9513 ct1478.1676 3348.9513 licpds%%DSIEndObjectrtmstm%% DSIBeginObject: # 6 - Ref: 8, RoundRect0.0078 0.6953 0.5508 0 f4np2715.7574 2388.9212 mt2977.235 2388.9212 li3020.0895 2388.9212 3055.3599 2424.1916 3055.3599 2467.0461 ct3055.3599 2754.8917 li3055.3599 2797.7462 3020.0895 2833.0166 2977.235 2833.0166 ct2454.2797 2833.0166 li2411.4252 2833.0166 2376.1548 2797.7462 2376.1548 2754.8917 ct2376.1548 2467.0461 li2376.1548 2424.1916 2411.4252 2388.9212 2454.2797 2388.9212 ct2715.7574 2388.9212 licpds%%DSIEndObjectrtmstm%% DSIBeginObject: # 7 - Ref: 9, RoundRect0.0078 0.6953 0.5508 0 f4np2709.2265 1500.7301 mt3192.7519 1500.7301 li3235.6064 1500.7301 3270.8769 1536.0005 3270.8769 1578.8551 ct3270.8769 1866.7006 li3270.8769 1909.5552 3235.6064 1944.8256 3192.7519 1944.8256 ct2225.7011 1944.8256 li2182.8465 1944.8256 2147.5761 1909.5552 2147.5761 1866.7006 ct2147.5761 1578.8551 li2147.5761 1536.0005 2182.8465 1500.7301 2225.7011 1500.7301 ct2709.2265 1500.7301 licpds%%DSIEndObjectrtmstm%% DSIBeginObject: # 8 - Ref: 10, RoundRect0.0078 0.6953 0.5508 0 f4np1468.3714 873.7716 mt1631.8868 873.7716 li1674.7414 873.7716 1710.0118 909.0421 1710.0118 951.8966 ct1710.0118 1141.78 li1710.0118 1184.6346 1674.7414 1219.905 1631.8868 1219.905 ct1304.8562 1219.905 li1262.0017 1219.905 1226.7313 1184.6346 1226.7313 1141.78 ct1226.7313 951.8966 li1226.7313 909.0421 1262.0017 873.7716 1304.8562 873.7716 ct1468.3714 873.7716 licpds%%DSIEndObjectrtmstm%% DSIBeginObject: # 9 - Ref: 4, Text0 fg0.1250 0.1250 sp0.0078 0.6953 0.5508 0 f4terminate-3000 -3000 :Mf70 sf( )S-2962 -3000 :MDeneba_CanvasGraphics begin0 fg0.1250 0.1250 sp 0 lcT sastm149.9999 fts/___FN3-3 0.75 0.75 mf0.0078 0.6953 0.5508 0 f4F sa1294.1132 405.7156 mt0 -0.1257 ta(EPICS) 5 0 325.44 tfT sartm%%DSIEndObjectrtmstm%% DSIBeginObject: # 10 - Ref: 13, Text0 fg0.1250 0.1250 sp0.0078 0.6953 0.5508 0 f4terminate-3000 -3000 :M( )S-2962 -3000 :MDeneba_CanvasGraphics begin0 fg0.1250 0.1250 sp 0 lcT sastm149.9999 fts/___FN3-3 0.75 0.75 mf0.0078 0.6953 0.5508 0 f4F sa1326.8195 1757.5945 mt0 0.4988 ta(C++) 3 0 203.98 tfT sartm%%DSIEndObjectrtmstm%% DSIBeginObject: # 11 - Ref: 14, Text0 fg0.1250 0.1250 sp0.0078 0.6953 0.5508 0 f4terminate-3000 -3000 :M( )S-2962 -3000 :MDeneba_CanvasGraphics begin0 fg0.1250 0.1250 sp 0 lcT sastm149.9999 fts/___FN3-3 0.75 0.75 mf0.0078 0.6953 0.5508 0 f4F sa1355.3627 2645.7856 mt0 0.2982 ta(Tcl) 3 0 150.53 tfT sartm0 fg0.1250 0.1250 sp0.0078 0.6953 0.5508 0 f4stm0.0078 0.6953 0.5508 0 f4F sa1506.1866 2645.7856 mt(/)  showT sartm0 fg0.1250 0.1250 sp0.0078 0.6953 0.5508 0 f4stm0.0078 0.6953 0.5508 0 f4F sa1537.4613 2645.7856 mt0 0.2982 ta(Tk) 2 0 125.25 tfT sartm%%DSIEndObjectrtmstm%% DSIBeginObject: # 12 - Ref: 15, Text0 fg0.1250 0.1250 sp0.4961 fgterminate-3000 -3000 :M( )S-2962 -3000 :MDeneba_CanvasGraphics begin0 fg0.1250 0.1250 sp 0 lcT sastm149.9999 fts/___FN3-3 0.75 0.75 mf0.4961 fgF sa2375.4221 2567.4157 mt0 0.4985 ta(Data Storage) 12 1 613.44 tfT sartm0 fg0.1250 0.1250 sp0.4961 fg0 fg0.4961 fgstmF sa2504.4153 2696.7883 mt(\()  showT sartm0 fg0.1250 0.1250 sp0.4961 fgstm0.4961 fgF sa2541.4977 2696.7883 mt0 0.0993 ta(UNIX) 4 0 281.23 tfT sartm0 fg0.1250 0.1250 sp0.4961 fgstm0.4961 fgF sa2822.8273 2696.7883 mt(\))  showT sartm%%DSIEndObjectrtmstm%% DSIBeginObject: # 13 - Ref: 16, Text0 fg0.1250 0.1250 sp0.0078 0.6953 0.5508 0 f4terminate-3000 -3000 :M( )S-2962 -3000 :MDeneba_CanvasGraphics begin0 fg0.1250 0.1250 sp 0 lcT sastm149.9999 fts/___FN3-3 0.75 0.75 mf0.0078 0.6953 0.5508 0 f4F sa1412.9805 3527.4457 mt0 0.4987 ta(Blt) 3 0 137.98 tfT sartm0 fg0.1250 0.1250 sp0.0078 0.6953 0.5508 0 f40 fg0.0078 0.6953 0.5508 0 f4stm0.0078 0.6953 0.5508 0 f4F sa1253.2336 3656.8183 mt0 0.3114 ta(\(Graphic\)) 9 0 457.41 tfT sartm%%DSIEndObjectrtmstm%% DSIBeginObject: # 14 - Ref: 17, Text0 fg0.1250 0.1250 sp0.8125 0.043 0.9727 0.0078 f4terminate-3000 -3000 :M( )S-2962 -3000 :MDeneba_CanvasGraphics begin0 fg0.1250 0.1250 sp 0 lcT sastm149.9999 fts/___FN3-3 0.75 0.75 mf0.8125 0.043 0.9727 0.0078 f4F sa2366.5883 1600.8549 mt0 0.3624 ta(Calculations) 12 0 590.92 tfT sartm0 fg0.1250 0.1250 sp0.8125 0.043 0.9727 0.0078 f40 fg0.8125 0.043 0.9727 0.0078 f4stm0.8125 0.043 0.9727 0.0078 f4F sa2204.5939 1730.2275 mt0 0.3319 ta(-Mean,) 6 0 335.65 tfT sartm0 fg0.1250 0.1250 sp0.8125 0.043 0.9727 0.0078 f4stm0.8125 0.043 0.9727 0.0078 f4F sa2540.5714 1730.2275 mt( )  showT sartm0 fg0.1250 0.1250 sp0.8125 0.043 0.9727 0.0078 f4stm0.8125 0.043 0.9727 0.0078 f4F sa2568.9034 1730.2275 mt0 0.3319 ta(Monents,) 8 0 437.30 tfT sartm0 fg0.1250 0.1250 sp0.8125 0.043 0.9727 0.0078 f4stm0.8125 0.043 0.9727 0.0078 f4F sa3006.5401 1730.2275 mt0 0.3319 ta( ...) 4 1 112.99 tfT sartm0 fg0.1250 0.1250 sp0.8125 0.043 0.9727 0.0078 f40 fg0.8125 0.043 0.9727 0.0078 f4stm0.8125 0.043 0.9727 0.0078 f4F sa2254.8437 1859.6001 mt0 0.1547 ta(-Beam) 5 0 306.53 tfT sartm0 fg0.1250 0.1250 sp0.8125 0.043 0.9727 0.0078 f4stm0.8125 0.043 0.9727 0.0078 f4F sa2561.5303 1859.6001 mt0 0.1547 ta( Energy, ...) 12 2 507.53 tfT sartm%%DSIEndObjectrtmstm%% DSIBeginObject: # 15 - Ref: 18, Text0 fg0.1250 0.1250 sp0.6055 0.2969 0.0078 0 f4terminate-3000 -3000 :M( )S-2962 -3000 :MDeneba_CanvasGraphics begin0 fg0.1250 0.1250 sp 0 lcT sastm149.9999 fts/___FN3-3 0.75 0.75 mf0.6055 0.2969 0.0078 0 f4F sa1303.258 1006.5506 mt0 -0.2506 ta(ASCII) 5 0 299.88 tfT sartm0 fg0.1250 0.1250 sp0.6055 0.2969 0.0078 0 f40 fg0.6055 0.2969 0.0078 0 f4stmF sa1337.7596 1135.9232 mt0 -0.0014 ta(Files) 5 0 231.00 tfT sartm%%DSIEndObjectrtmstm%% DSIBeginObject: # 16 - Ref: 12, Polygon1. fgnp1246.3238 2604.4381 mt351.6018 2604.4381 li351.6018 357.8372 li1207.1389 357.8372 lide0 fg6.2500 6.2500 sp11.5 lm 0 ljnp1246.3238 2604.4381 mt351.6018 2604.4381 li351.6018 357.8372 li1207.1389 357.8372 lidsgs0 fgnp1166.022 388.5656 mt1158.2051 367.9833 1158.2051 347.6909 1166.0225 327.1088 ct1254.1184 357.8379 li1166.022 388.5656 licpdegr%%DSIEndObjectrtmstm%% DSIBeginObject: # 17 - Ref: 19, Line0 fgnp1474.9023 527.6384 mt1474.9023 854.1792 lidsgs0 fgnp1444.1741 813.0624 mt1464.7564 805.2455 1485.0488 805.2455 1505.6308 813.0629 ct1474.9018 901.1588 li1444.1741 813.0624 licpdegr%%DSIEndObjectrtmstm%% DSIBeginObject: # 18 - Ref: 20, Line0 fgnp1481.4331 1213.3741 mt1481.4331 1526.8534 lidsgs0 fgnp1450.7048 1485.7366 mt1471.2871 1477.9197 1491.5795 1477.9197 1512.1616 1485.7371 ct1481.4325 1573.8329 li1450.7048 1485.7366 licpdegr%%DSIEndObjectrtmstm%% DSIBeginObject: # 19 - Ref: 21, Line0 fgnp1376.9401 1853.3941 mt1376.9401 2441.1677 lidsgs0 fgnp1346.2118 2400.0509 mt1366.7941 2392.234 1387.0865 2392.234 1407.6686 2400.0514 ct1376.9395 2488.1473 li1346.2118 2400.0509 licpdegr%%DSIEndObjectrtmstm%% DSIBeginObject: # 20 - Ref: 22, Line0 fgnp1546.7413 2447.6984 mt1546.7413 1853.3942 lidsgs0 fgnp1577.47 1894.5111 mt1556.8877 1902.328 1536.5953 1902.328 1516.0132 1894.5107 ct1546.7422 1806.4148 li1577.47 1894.5111 licpdegr%%DSIEndObjectrtmstm%% DSIBeginObject: # 21 - Ref: 23, Line0 fgnp1481.4331 2774.2393 mt1481.4331 3329.3587 lidsgs0 fgnp1450.7048 3288.2419 mt1471.2871 3280.425 1491.5795 3280.425 1512.1616 3288.2423 ct1481.4325 3376.3382 li1450.7048 3288.2419 licpdegr%%DSIEndObjectrtmstm%% DSIBeginObject: # 22 - Ref: 24, Line0 fgnp1696.95 2663.2153 mt2350.0318 2663.2154 lidsgs0 fgnp2308.9149 2693.9438 mt2301.098 2673.3615 2301.098 2653.0691 2308.9154 2632.487 ct2397.0113 2663.2161 li2308.9149 2693.9438 licpdegr%%DSIEndObjectrtmstm%% DSIBeginObject: # 23 - Ref: 25, Line0 fgnp2363.0934 2526.0682 mt1710.0118 2526.0684 lidsgs0 fgnp1751.1283 2495.3403 mt1758.9452 2515.9226 1758.9452 2536.215 1751.1279 2556.7971 ct1663.032 2526.0681 li1751.1283 2495.3403 licpdegr%%DSIEndObjectrtmstm%% DSIBeginObject: # 24 - Ref: 26, Line0 fgnp1710.0118 1761.9627 mt2134.5148 1761.9627 lidsgs0 fgnp2093.398 1792.6911 mt2085.5811 1772.1088 2085.5811 1751.8164 2093.3985 1731.2343 ct2181.4944 1761.9634 li2093.398 1792.6911 licpdegr%%DSIEndObjectrtmstm%% DSIBeginObject: # 25 - Ref: 27, Line0 fgnp2134.5148 1657.4697 mt1723.0734 1657.4697 lidsgs0 fgnp1764.19 1626.7417 mt1772.0069 1647.324 1772.0069 1667.6164 1764.1895 1688.1984 ct1676.0936 1657.4694 li1764.19 1626.7417 licpdegr%%DSIEndObjectrtmterminateendpshowpage%%Trailerend%%EOF